#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

"""revision:1573629853

Revision ID: bbcb6050dfd1
Revises: 7bc42538a698
Create Date: 2019-11-13 15:24:14.234160

"""

from alembic import op
import sqlalchemy as sa
from airflow.models.base import ID_LEN
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bbcb6050dfd1'
down_revision = '7bc42538a698'
branch_labels = None
depends_on = None


def upgrade():
    """Apply revision:1573629853"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sync_dag',
    sa.Column('sync_dag_id', sa.String(ID_LEN), nullable=False),
    sa.Column('sync_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['sync_dag_id'], ['dag.dag_id'], ),
    sa.PrimaryKeyConstraint('sync_dag_id')
    )
    # op.drop_table('ab_role')
    # op.drop_table('ab_register_user')
    # op.drop_table('ab_permission_view')
    # op.drop_table('ab_permission')
    # op.drop_table('ab_view_menu')
    # op.drop_table('ab_permission_view_role')
    # op.drop_table('ab_user')
    # op.drop_table('ab_user_role')
    # op.drop_column('users', 'password')
    # ### end Alembic commands ###


def downgrade():
    """Unapply revision:1573629853"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_table('ab_user_role',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], name='ab_user_role_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], name='ab_user_role_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ab_user_role_pkey'),
    sa.UniqueConstraint('user_id', 'role_id', name='ab_user_role_user_id_role_id_key')
    )
    op.create_table('ab_user',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('login_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fail_login_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('changed_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('changed_by_fk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], name='ab_user_changed_by_fk_fkey'),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], name='ab_user_created_by_fk_fkey'),
    sa.PrimaryKeyConstraint('id', name='ab_user_pkey'),
    sa.UniqueConstraint('email', name='ab_user_email_key'),
    sa.UniqueConstraint('username', name='ab_user_username_key')
    )
    op.create_table('ab_permission_view_role',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_view_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_view_id'], ['ab_permission_view.id'], name='ab_permission_view_role_permission_view_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['ab_role.id'], name='ab_permission_view_role_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ab_permission_view_role_pkey'),
    sa.UniqueConstraint('permission_view_id', 'role_id', name='ab_permission_view_role_permission_view_id_role_id_key')
    )
    op.create_table('ab_view_menu',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ab_view_menu_pkey'),
    sa.UniqueConstraint('name', name='ab_view_menu_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ab_permission',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ab_permission_pkey'),
    sa.UniqueConstraint('name', name='ab_permission_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ab_permission_view',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('view_menu_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['ab_permission.id'], name='ab_permission_view_permission_id_fkey'),
    sa.ForeignKeyConstraint(['view_menu_id'], ['ab_view_menu.id'], name='ab_permission_view_view_menu_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ab_permission_view_pkey'),
    sa.UniqueConstraint('permission_id', 'view_menu_id', name='ab_permission_view_permission_id_view_menu_id_key')
    )
    op.create_table('ab_register_user',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('registration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('registration_hash', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ab_register_user_pkey'),
    sa.UniqueConstraint('username', name='ab_register_user_username_key')
    )
    op.create_table('ab_role',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ab_role_pkey'),
    sa.UniqueConstraint('name', name='ab_role_name_key')
    )
    op.drop_table('sync_dag')
    op.drop_table('parent')
    # ### end Alembic commands ###
